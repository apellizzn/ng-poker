'use strict';

describe('Service: Game', function () {

  // load the service's module
  beforeEach(module('fcApp'));

  // instantiate service
  var Game = void 0;
  var Players = void 0;
  var player = {
    id: 1,
    name: 'foo',
    fiches: '70'
  };

  beforeEach(inject(function (_Game_, _Players_) {
    Game = _Game_;
    Players = _Players_;
  }));

  describe('reset', function () {
    it('rests the game', function () {
      Game.reset();
      expect(Game.cards.length).toEqual(52);
      expect(Game.cards.filter(function (c) {
        return c.type === 'S';
      }).length).toEqual(13);
      expect(Game.cards.filter(function (c) {
        return c.type === 'D';
      }).length).toEqual(13);
      expect(Game.cards.filter(function (c) {
        return c.type === 'H';
      }).length).toEqual(13);
      expect(Game.cards.filter(function (c) {
        return c.type === 'F';
      }).length).toEqual(13);
    });
  });

  describe('addPlayer', function () {
    it('adds a new player', function () {
      spyOn(Players, 'addPlayer');
      Game.addPlayer(player);
      expect(Players.addPlayer).toHaveBeenCalledWith(player);
    });
  });

  describe('findPlayer', function () {
    it('finds the player', function () {
      spyOn(Players, 'find');
      Game.findPlayer(1);
      expect(Players.find).toHaveBeenCalledWith(1);
    });
  });

  describe('bet', function () {
    it('calls the right methods', function () {
      spyOn(Players, 'bet');
      spyOn(Game, 'revealCards');
      Game.bet(player, player);
      expect(Players.bet).toHaveBeenCalledWith(player, player);
      expect(Game.revealCards).toHaveBeenCalledWith(1);
    });
  });

  describe('giveCards', function () {
    it('calls the right methods', function () {
      Game.reset();
      spyOn(Players, 'giveCards');
      spyOn(Game, 'revealCards');
      Game.giveCards();
      expect(Players.giveCards).toHaveBeenCalled();
      expect(Game.revealCards).toHaveBeenCalledWith(3);
    });
  });
});
//# sourceMappingURL=game.es5.map
