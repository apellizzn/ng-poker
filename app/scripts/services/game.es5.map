{"version":3,"sources":["game.js"],"names":[],"mappings":"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","file":"game.es5","sourcesContent":["'use strict';\n\n/**\n * @ngdoc service\n * @name fcApp.Game\n * @description\n * # Game\n * Service in the fcApp.\n */\nangular.module('fcApp')\n  .factory('Game', ($q, lodash, Players) => {\n    const numbers = lodash.range(0, 13);\n    let service = {\n      revealed: [],\n      cards: [],\n      turnBet: {\n        expect: [],\n        amount: 0,\n        max: 0,\n        bets: []\n      }\n    };\n\n    service.nextTurn = () => {\n      service.turnBet = {\n        amount: 0,\n        max: 0,\n        bets: []\n      };\n    };\n\n    service.reset = () => {\n      service.cards = lodash.union(\n        lodash.map(numbers, (n) => { return { value: n, type: 'S' }; }),\n        lodash.map(numbers, (n) => { return { value: n, type: 'D' }; }),\n        lodash.map(numbers, (n) => { return { value: n, type: 'F' }; }),\n        lodash.map(numbers, (n) => { return { value: n, type: 'H' }; })\n      );\n      service.nextTurn();\n    };\n\n    service.playersNum = () => Players.getPlayersCount();\n\n    service.addPlayer = (ps) => Players.addPlayer(ps);\n\n    service.findPlayer = (id) => Players.find(id);\n\n    service.getCards = () => service.cards;\n\n    service.getRevealedCards = () => service.revealed;\n\n    service.addBet = (p) => {\n      service.turnBet.bets.push(p);\n      service.turnBet.amount += p.raise;\n      if (service.turnBet.bets.length == service.playersNum()) {\n        service.bet(service.turnBet.bets);\n        service.nextTurn();\n      }\n    };\n\n    service.bet = (bets) => {\n      Players.bet(bets);\n      service.turnBet.amount = lodash.sumBy(bets, (b) => b.raise);\n      if(bets.every((b) => b.raise === bets[0].raise)) {\n        service.revealCards(1);\n      } else {\n        // raise\n      }\n    };\n\n    service.twoForEach = () =>\n      lodash.pullAt(service.cards, lodash.range(service.playersNum() * 2));\n\n    service.giveCards = () => {\n      if (service.cards.length < 4) { return; }\n      service.cards = lodash.shuffle(service.cards);\n      Players.giveCards(service.twoForEach());\n      service.revealCards(3);\n    };\n\n    service.revealCards = (n) => {\n      service.cards = lodash.shuffle(service.cards);\n      var newCards = lodash.pullAt(service.cards, lodash.range(n));\n      service.revealed = lodash.union(service.revealed, newCards);\n    };\n\n    return service;\n  });\n"]}