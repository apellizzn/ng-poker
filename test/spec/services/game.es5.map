{"version":3,"sources":["game.js"],"names":[],"mappings":"AAAA;;AAEA,SAAS,eAAT,EAA0B,YAAY;;;AAGpC,aAAW,OAAO,OAAP,CAAX;;;AAGA,MAAI,aAAJ;AACA,MAAI,gBAAJ;AACA,MAAM,SAAS;AACb,QAAI,CADS;AAEb,UAAM,KAFO;AAGb,YAAQ;AAHK,GAAf;;AAMA,aAAW,OAAQ,UAAS,MAAT,EAAiB,SAAjB,EAA4B;AAC7C,WAAO,MAAP;AACA,cAAU,SAAV;AACD,GAHU,CAAX;;AAKA,WAAS,OAAT,EAAkB,YAAM;AACtB,OAAG,gBAAH,EAAqB,YAAM;AACzB,WAAK,KAAL;AACA,aAAO,KAAK,KAAL,CAAW,MAAlB,EAA0B,OAA1B,CAAkC,EAAlC;AACA,aAAO,KAAK,KAAL,CAAW,MAAX,CAAkB,UAAC,CAAD;AAAA,eAAO,EAAE,IAAF,KAAW,GAAlB;AAAA,OAAlB,EAAyC,MAAhD,EAAwD,OAAxD,CAAgE,EAAhE;AACA,aAAO,KAAK,KAAL,CAAW,MAAX,CAAkB,UAAC,CAAD;AAAA,eAAO,EAAE,IAAF,KAAW,GAAlB;AAAA,OAAlB,EAAyC,MAAhD,EAAwD,OAAxD,CAAgE,EAAhE;AACA,aAAO,KAAK,KAAL,CAAW,MAAX,CAAkB,UAAC,CAAD;AAAA,eAAO,EAAE,IAAF,KAAW,GAAlB;AAAA,OAAlB,EAAyC,MAAhD,EAAwD,OAAxD,CAAgE,EAAhE;AACA,aAAO,KAAK,KAAL,CAAW,MAAX,CAAkB,UAAC,CAAD;AAAA,eAAO,EAAE,IAAF,KAAW,GAAlB;AAAA,OAAlB,EAAyC,MAAhD,EAAwD,OAAxD,CAAgE,EAAhE;AACD,KAPD;AAQD,GATD;;AAWA,WAAS,WAAT,EAAsB,YAAM;AAC1B,OAAG,mBAAH,EAAwB,YAAM;AAC5B,YAAM,OAAN,EAAe,WAAf;AACA,WAAK,SAAL,CAAe,MAAf;AACA,aAAO,QAAQ,SAAf,EAA0B,oBAA1B,CAA+C,MAA/C;AACD,KAJD;AAKD,GAND;;AAQA,WAAS,YAAT,EAAuB,YAAM;AAC3B,OAAG,kBAAH,EAAuB,YAAM;AAC3B,YAAM,OAAN,EAAe,MAAf;AACA,WAAK,UAAL,CAAgB,CAAhB;AACA,aAAO,QAAQ,IAAf,EAAqB,oBAArB,CAA0C,CAA1C;AACD,KAJD;AAKD,GAND;;AAQA,WAAS,KAAT,EAAgB,YAAY;AAC1B,OAAG,yBAAH,EAA8B,YAAY;AACxC,YAAM,OAAN,EAAe,KAAf;AACA,YAAM,IAAN,EAAY,aAAZ;AACA,WAAK,GAAL,CAAS,CAAC,MAAD,EAAS,MAAT,CAAT;AACA,aAAO,QAAQ,GAAf,EAAoB,oBAApB,CAAyC,CAAC,MAAD,EAAS,MAAT,CAAzC;AACA,aAAO,KAAK,WAAZ,EAAyB,oBAAzB,CAA8C,CAA9C;AACD,KAND;AAOD,GARD;;AAUA,WAAS,WAAT,EAAsB,YAAY;AAChC,OAAG,yBAAH,EAA8B,YAAY;AACxC,WAAK,KAAL;AACA,YAAM,OAAN,EAAe,WAAf;AACA,YAAM,IAAN,EAAY,aAAZ;AACA,WAAK,SAAL;AACA,aAAO,QAAQ,SAAf,EAA0B,gBAA1B;AACA,aAAO,KAAK,WAAZ,EAAyB,oBAAzB,CAA8C,CAA9C;AACD,KAPD;AAQD,GATD;AAUD,CAlED","file":"game.es5","sourcesContent":["'use strict';\n\ndescribe('Service: Game', function () {\n\n  // load the service's module\n  beforeEach(module('fcApp'));\n\n  // instantiate service\n  let Game;\n  let Players;\n  const player = {\n    id: 1,\n    name: 'foo',\n    fiches: '70'\n  };\n\n  beforeEach(inject( function(_Game_, _Players_) {\n    Game = _Game_;\n    Players = _Players_;\n  }));\n\n  describe('reset', () => {\n    it('rests the game', () => {\n      Game.reset();\n      expect(Game.cards.length).toEqual(52);\n      expect(Game.cards.filter((c) => c.type === 'S').length).toEqual(13);\n      expect(Game.cards.filter((c) => c.type === 'D').length).toEqual(13);\n      expect(Game.cards.filter((c) => c.type === 'H').length).toEqual(13);\n      expect(Game.cards.filter((c) => c.type === 'F').length).toEqual(13);\n    });\n  });\n\n  describe('addPlayer', () => {\n    it('adds a new player', () => {\n      spyOn(Players, 'addPlayer');\n      Game.addPlayer(player);\n      expect(Players.addPlayer).toHaveBeenCalledWith(player);\n    });\n  });\n\n  describe('findPlayer', () => {\n    it('finds the player', () => {\n      spyOn(Players, 'find');\n      Game.findPlayer(1);\n      expect(Players.find).toHaveBeenCalledWith(1);\n    });\n  });\n\n  describe('bet', function () {\n    it('calls the right methods', function () {\n      spyOn(Players, 'bet');\n      spyOn(Game, 'revealCards');\n      Game.bet([player, player]);\n      expect(Players.bet).toHaveBeenCalledWith([player, player]);\n      expect(Game.revealCards).toHaveBeenCalledWith(1);\n    });\n  });\n\n  describe('giveCards', function () {\n    it('calls the right methods', function () {\n      Game.reset();\n      spyOn(Players, 'giveCards');\n      spyOn(Game, 'revealCards');\n      Game.giveCards();\n      expect(Players.giveCards).toHaveBeenCalled();\n      expect(Game.revealCards).toHaveBeenCalledWith(3);\n    });\n  });\n});\n"]}